/**
 * This is the defaults template which is always read first.
 */
{
    /**
     * Default migration project name
     */
     name : "M2PG"

    ,timezone : "UTC"

    ,information_schema : {

        /**
         * REQUIRED; The query of the information_schema that will retrieve the column definitions
         */
        query          : ""

        /**
        * This value is required for information_schema.query in the ms-sql-server template
        */
        ,database_name : ""
    }


    /**
     * REQUIRED; The names of the source connection (copy from)
     * The key of source must appear in the connections segment of the config.
     */
    ,source : ""

    /**
     * REQUIRED; The names of the target connection (copy to)
     * The key of target must appear in the connections segment of the config.
     */
    ,target : ""

    /**
     * Defines the available database connections.  Each connection must
     * have a connectionString key.  Other keys are optional and will be
     * added to the Properties object when connecting to the database.
     */
    ,connections : {
        /*
        mssql : {
             connectionString : "jdbc:sqlserver://localhost:1433"
            ,user             : "%connections.mssql.user%"
            ,password         : "%connections.mssql.password%"
            ,databaseName     : "%connections.mssql.dbname%"
        }
        ,postgres : {
             connectionString : "jdbc:postgresql://localhost:5432/%connections.pg.dbname%"
            ,user             : "postgres"
            ,password         : ""
        }
        //*/
    }


    /**
     * Mappings for schema names from source to target, e.g. HumanResources -> hr
     */
     ,schema_mapping : {}


    /**
     * Mappings for table names from source to target, e.g. HumanResources -> hr
     * runs before table_transform
     */
     ,table_mapping : {}


    /**
     * Mappings for column names in case the source db has keyword names like "group"
     * or "primary", or has a space that we want to remove.
     * runs before column_transform
     */
    ,column_mapping : {}


    /**
    * Specify whether to transform the table and/or column names.  Available transforms are
    *   lower_case          - transforms MyTableName to mytablename
    *   upper_case          - transforms MyTableName to MYTABLENAME
    *   camel_to_snake_case - transforms MyTableName to my_table_name
    */
    ,table_transform  : ""
    ,column_transform : ""


    /**
     * Data Definition config
     */
    ,ddl  : {

        /**
         * When true, a DROP SCHEMA IF EXISTS will be added at the top of the DDL script
         */
         drop_schema : false
    }


    /**
     * Data Modification config
     */
    ,dml  : {

        /**
         * SQL commands to execute
         */
         execute   : {

            /**
             * array of SQL commands to execute after all of the DML queries run.
             * if an item ends with ".sql" then it is interpreted as a path to a script.
             */
             after_all  : []

            /**
             * array of SQL commands to execute before all of the DML queries run
             * if an item ends with ".sql" then it is interpreted as a path to a script.
             */
            ,before_all : []

            /**
             * all - execute all recommendations, e.g ALTER TABLE tbl ALTER COLUMN RESTART WITH n;
             */
            ,recommended : ""
        }

        /**
         * Number of concurrent threads (connections) that will be used to copy the data.  Can be either
         * the string "cores", which translates into the number of CPU cores available to the JVM that is
         * running the migration, or an integer value.
         */
        ,threads  : "cores"
    }

}
